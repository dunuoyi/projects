<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans          
    http://www.springframework.org/schema/beans/spring-beans.xsd          
    http://www.springframework.org/schema/security          
    http://www.springframework.org/schema/security/spring-security.xsd">
    
    <!-- 配置不拦截的资源 -->
    <security:http pattern="/login.jsp" security="none"/>
    <security:http pattern="/failer.jsp" security="none"/>
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/plugins/**" security="none"/>
    
    <bean id="userService" class="com.dhcc.jcpt.service.UserServiceImpl"></bean>
     <!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源 -->  
    <bean id="myAccessDecisionManagerBean" class="com.dhcc.jcpt.config.MyAccessDecisionManager"></bean>  
    <!-- 资源源数据定义，即定义某一资源可以被哪些角色访问 -->  
    <bean id="securityMetadataSource" class="com.dhcc.jcpt.config.MySecurityMetadataSource" />
         
    <bean id="myFilter" class="com.dhcc.jcpt.config.MyFilterSecurityInterceptor">  
        <property name="authenticationManager" ref="authenticationManager" />  
        <property name="accessDecisionManager" ref="myAccessDecisionManagerBean" />  
        <property name="securityMetadataSource" ref="securityMetadataSource" />  
    </bean>
    
    <!-- 
    	配置具体的规则auto-config="true"	不用自己编写登录的页面，框架提供默认登录页面use-expressions="false"是否使用SPEL表达式
    -->
    <security:http auto-config="true" use-expressions="false">
    
    	
    	<!-- 配置具体的拦截的规则 pattern="请求路径的规则" access="访问系统的人，必须有ROLE_USER的角色" -->
    	<security:intercept-url pattern="/**" access="ROLE_USER,ROLE_ADMIN"/>
    	
    	<!-- 定义跳转的具体的页面      login-processing-url="/login.do" 登陆表单提交请求-->
    	<security:form-login  
    		login-page="/login.jsp"
    		username-parameter="username"
    		password-parameter="password"
    		default-target-url="/index.jsp"
    		authentication-failure-url="/failer.jsp"
    	/>
    	
    	<!-- 关闭跨域请求 -->
    	<security:csrf disabled="true"/>
    	<!-- 退出 -->
    	<security:logout invalidate-session="true" logout-url="/logout.do" logout-success-url="/login.jsp" />
    	
    	
    	<security:custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="myFilter" />
    	
    </security:http>
    
    <!-- 切换成数据库中的用户名和密码 -->
    <security:authentication-manager alias="authenticationManager">
    	<security:authentication-provider user-service-ref="userService">
    		<!-- 配置加密的方式
    		<security:password-encoder hash="bcrypt"/>
    		 -->
    		 <security:password-encoder ref="passwordEncoder"/>
    	</security:authentication-provider>
    </security:authentication-manager>
    
    <!-- 配置加密类 -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    
 
 </beans>   